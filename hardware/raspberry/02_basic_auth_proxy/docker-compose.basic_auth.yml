version: "3"

services:
    traefik:
        image: traefik:v2.3
        container_name: traefik
        restart: always
        networks:
            - "iotstack"
        ports:
            - "80:80"
            # MQTT
            - "1883:1883"
            - "1884:1884"
        depends_on:
            # Let every other service start before traefik
            - mosquitto
            - grafana
            - influxdb
            - telegraf
            - opc-client
        volumes:
            # Traefik Static Configuration
            - ./traefik/traefik.toml:/etc/traefik/traefik.toml
            - ./traefik/log/access.log:/log/access.log
            # Traefik Dynamic Configuration
            - ./traefik/configurations:/etc/traefik/configurations
            # Docker Provider via Socket
            - /var/run/docker.sock:/var/run/docker.sock:ro
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.api-router=api-router@file"
            - "traefik.http.routers.traefik-http-router.service=api@internal"

    influxdb:
        image: influxdb:latest
        container_name: influxdb
        env_file: basic_auth.env
        ports:
            - '8086:8086'
        volumes: 
            - influxdb2:/var/lib/influxdb2
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.influxdb-router=influxdb-router@file"
            - "traefik.http.routers.influxdb-router.middlewares=influxdb-mw@file"
            - "traefik.http.routers.influxdb-router.service=influxdb@file"
        networks: 
            - "iotstack"

    mosquitto:
        image: eclipse-mosquitto:1.6
        container_name: mosquitto
        volumes: 
            - ./mosquitto/config/:/mosquitto/config/
            - ./mosquitto/log:/mosquitto/log
            - ./mosquitto/data:/mosquitto/data
        user: "${USER_ID}:${GRP_ID}"
        expose:
            - 1883
            - 1884
        links: 
            - telegraf
        restart: always
        labels:
            - "traefik.enable=true"
            # TCP Routers for MQTT and Websockets
            - "traefik.tcp.routers.mqtt-router=mqtt-router@file"
            - "traefik.tcp.routers.mqtt-websockets-router=mqtt-websockets-router@file"
            # TCP Services for MQTT and Websockets
            - "traefik.tcp.services.mosquitto=mosquitto@file"
            - "traefik.tcp.services.mosquitto-ws=mosquitto-ws@file"
        networks: 
            - "iotstack"
    
    telegraf:
        image: telegraf:1.16
        container_name: telegraf
        links: 
            - influxdb
        env_file: basic_auth.env
        ports:
            - '8125:8125'
        volumes: 
            - ./telegraf/telegraf.toml:/etc/telegraf/telegraf.conf:ro
        labels:
            - "traefik.enable=false"
        networks: 
            - "iotstack"
    
    grafana:
        image: grafana/grafana:7.1.0
        container_name: grafana
        env_file: basic_auth.env
        user: "472"
        ports:
            - '3000:3000'
        links: 
            - influxdb
        volumes: 
            - grafana_data:/var/lib/grafana
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.grafana-router=grafana-router@file"
            - "traefik.http.routers.grafana-router.middlewares=grafana-mw@file"
            - "traefik.http.routers.grafana-router.service=grafana@file"
        networks: 
            - "iotstack"

    opc-client:
        build: ./frontend
        container_name: opc-client
        privileged: true
        restart: always
        ports:
            - "8000:8000"

volumes: 
    influxdb2:
    grafana_data:

networks: 
    iotstack:
        external: true
